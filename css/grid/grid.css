/*doc
---
title: Grid
name: grid
category: Grid
---
Basic usage:

```html_example
<div class="grid">
  <div class="grid-cell"><div class="example-grid-content">Cell 1</div></div>
  <div class="grid-cell"><div class="example-grid-content">Cell 2</div></div>
  <div class="grid-cell"><div class="example-grid-content">Cell 3</div></div>
</div>
```

The `grid--no-gutters` modifier removes the spaces around each grid cell:

```html_example
<div class="grid grid--no-gutters">
  <div class="grid-cell"><div class="example-grid-content">Cell 1</div></div>
  <div class="grid-cell"><div class="example-grid-content">Cell 2</div></div>
  <div class="grid-cell"><div class="example-grid-content">Cell 3</div></div>
</div>
```

To display the grid as a column or row (default), use the `grid--col` or `grid--row` modifier:

```html_example
<div class="grid grid--col">
  <div class="grid-cell"><div class="example-grid-content">Cell 1</div></div>
  <div class="grid-cell"><div class="example-grid-content">Cell 2</div></div>
  <div class="grid-cell"><div class="example-grid-content">Cell 3</div></div>
</div>
```

Using the `grid--row-reverse` or `grid--col-reverse` modifier, the order of the cells can be reversed:

```html_example
<div class="grid grid--row-reverse">
  <div class="grid-cell"><div class="example-grid-content">Cell 1</div></div>
  <div class="grid-cell"><div class="example-grid-content">Cell 2</div></div>
  <div class="grid-cell"><div class="example-grid-content">Cell 3</div></div>
</div>
```

Specifying grid cell sizes on the container:

```html_example
<div class="grid grid--4">
  <div class="grid-cell"><div class="example-grid-content">Cell 1</div></div>
  <div class="grid-cell"><div class="example-grid-content">Cell 2</div></div>
  <div class="grid-cell"><div class="example-grid-content">Cell 3</div></div>
</div>
```

Specifying grid cell sizes on each cell:

```html_example
<div class="grid">
  <div class="grid-cell grid-cell--3"><div class="example-grid-content">Cell 1</div></div>
  <div class="grid-cell grid-cell--2"><div class="example-grid-content">Cell 2</div></div>
  <div class="grid-cell grid-cell--6"><div class="example-grid-content">Cell 3</div></div>
</div>
```

Responsive grid:

```html_example
<div class="grid grid--1 grid-xs--2 grid-md--4 grid-lg--6">
  <div class="grid-cell"><div class="example-grid-content">Cell 1</div></div>
  <div class="grid-cell"><div class="example-grid-content">Cell 2</div></div>
  <div class="grid-cell"><div class="example-grid-content">Cell 3</div></div>
  <div class="grid-cell"><div class="example-grid-content">Cell 4</div></div>
  <div class="grid-cell"><div class="example-grid-content">Cell 5</div></div>
  <div class="grid-cell"><div class="example-grid-content">Cell 6</div></div>
</div>
```

Responsive grid-cells:

```html_example
<div class="grid">
  <div class="grid-cell grid-cell--1"><div class="example-grid-content">Cell 1</div></div>
  <div class="grid-cell grid-cell-xs--1"><div class="example-grid-content">Cell 2</div></div>
  <div class="grid-cell grid-cell-md--2 grid-cell-lg--4"><div class="example-grid-content">Cell 3</div></div>
  <div class="grid-cell grid-cell-md--2 grid-cell-lg--4"><div class="example-grid-content">Cell 4</div></div>
  <div class="grid-cell grid-cell-lg--4"><div class="example-grid-content">Cell 5</div></div>
  <div class="grid-cell grid-cell-lg--4"><div class="example-grid-content">Cell 6</div></div>
</div>
```

Aligning grid-cell content using the following modifier:

- `grid--align-start` vertical align cells on 'top'
- `grid--align-center` vertical align cells on 'center'
- `grid--align-start` vertical align cells on 'bottom'
- `grid--justify-center` centering cells horizontally
- `grid-cell--align-start` vertical align single cell on 'top'
- `grid-cell--align-center` vertical align single cell on 'center'
- `grid-cell--align-end` vertical align single cell on 'bottom'

Responsive cell-order modifier:

- `grid-xs--row`
- `grid-xs--col`
- `grid-xs--row-reverse`
- `grid-xs--col-reverse`

*/
.grid {
  display: flex;
  flex-grow: 1;
  /*
  Set flex-shrink to 0, this fixes grid nesting in other flex elements
  https://github.com/philipwalton/flexbugs#1-minimum-content-sizing-of-flex-items-not-honored
  */
  flex-shrink: 0;
  flex-wrap: wrap;
  list-style: none;
  margin: 0 var(--gutter-compensation) var(--gutter-width);
  padding: 0;
}
.grid--no-gutters {
  margin-left:  0;
  margin-right: 0;
}

.grid--no-gutters > .grid-cell {
  padding-left:  0;
  padding-right: 0;
}

.grid--row { flex-direction: row }
.grid--col { flex-direction: column }

.grid--row-reverse { flex-direction: row-reverse    }
.grid--col-reverse { flex-direction: column-reverse }

.grid--align-start {
  align-items: flex-start;
}

.grid--align-center {
  align-items: center;
}

.grid--align-end {
  align-items: flex-end;
}

.grid--justify-center {
  justify-content: center;
}

.grid-cell--align-start {
  align-self: flex-start;
}

.grid-cell--align-center {
  align-self: center;
}

.grid-cell--align-end {
  align-self: flex-end;
}

.grid-cell {
  flex: 1;
  padding-left:  var(--gutter-width);
  padding-right: var(--gutter-width);
}

.grid--1  > .grid-cell { flex: 0 0 calc(1 /  1 * 100)% }
.grid--2  > .grid-cell { flex: 0 0 calc(1 /  2 * 100)% }
.grid--3  > .grid-cell { flex: 0 0 calc(1 /  3 * 100)% }
.grid--4  > .grid-cell { flex: 0 0 calc(1 /  4 * 100)% }
.grid--5  > .grid-cell { flex: 0 0 calc(1 /  5 * 100)% }
.grid--6  > .grid-cell { flex: 0 0 calc(1 /  6 * 100)% }
.grid--7  > .grid-cell { flex: 0 0 calc(1 /  7 * 100)% }
.grid--8  > .grid-cell { flex: 0 0 calc(1 /  8 * 100)% }
.grid--9  > .grid-cell { flex: 0 0 calc(1 /  9 * 100)% }
.grid--10 > .grid-cell { flex: 0 0 calc(1 / 10 * 100)% }
.grid--11 > .grid-cell { flex: 0 0 calc(1 / 11 * 100)% }
.grid--12 > .grid-cell { flex: 0 0 calc(1 / 12 * 100)% }

@media (--xs-viewport) {
  .grid-xs--row { flex-direction: row }
  .grid-xs--col { flex-direction: column }

  .grid-xs--row-reverse { flex-direction: row-reverse    }
  .grid-xs--col-reverse { flex-direction: column-reverse }

  .grid-xs--1  > .grid-cell { flex: 0 0 calc(1 /  1 * 100)% }
  .grid-xs--2  > .grid-cell { flex: 0 0 calc(1 /  2 * 100)% }
  .grid-xs--3  > .grid-cell { flex: 0 0 calc(1 /  3 * 100)% }
  .grid-xs--4  > .grid-cell { flex: 0 0 calc(1 /  4 * 100)% }
  .grid-xs--5  > .grid-cell { flex: 0 0 calc(1 /  5 * 100)% }
  .grid-xs--6  > .grid-cell { flex: 0 0 calc(1 /  6 * 100)% }
  .grid-xs--7  > .grid-cell { flex: 0 0 calc(1 /  7 * 100)% }
  .grid-xs--8  > .grid-cell { flex: 0 0 calc(1 /  8 * 100)% }
  .grid-xs--9  > .grid-cell { flex: 0 0 calc(1 /  9 * 100)% }
  .grid-xs--10 > .grid-cell { flex: 0 0 calc(1 / 10 * 100)% }
  .grid-xs--11 > .grid-cell { flex: 0 0 calc(1 / 11 * 100)% }
  .grid-xs--12 > .grid-cell { flex: 0 0 calc(1 / 12 * 100)% }
}

@media (--sm-viewport) {
  .grid-sm--row { flex-direction: row }
  .grid-sm--col { flex-direction: column }

  .grid-sm--row-reverse { flex-direction: row-reverse    }
  .grid-sm--col-reverse { flex-direction: column-reverse }

  .grid-sm--1  > .grid-cell { flex: 0 0 calc(1 /  1 * 100)% }
  .grid-sm--2  > .grid-cell { flex: 0 0 calc(1 /  2 * 100)% }
  .grid-sm--3  > .grid-cell { flex: 0 0 calc(1 /  3 * 100)% }
  .grid-sm--4  > .grid-cell { flex: 0 0 calc(1 /  4 * 100)% }
  .grid-sm--5  > .grid-cell { flex: 0 0 calc(1 /  5 * 100)% }
  .grid-sm--6  > .grid-cell { flex: 0 0 calc(1 /  6 * 100)% }
  .grid-sm--7  > .grid-cell { flex: 0 0 calc(1 /  7 * 100)% }
  .grid-sm--8  > .grid-cell { flex: 0 0 calc(1 /  8 * 100)% }
  .grid-sm--9  > .grid-cell { flex: 0 0 calc(1 /  9 * 100)% }
  .grid-sm--10 > .grid-cell { flex: 0 0 calc(1 / 10 * 100)% }
  .grid-sm--11 > .grid-cell { flex: 0 0 calc(1 / 11 * 100)% }
  .grid-sm--12 > .grid-cell { flex: 0 0 calc(1 / 12 * 100)% }
}

@media (--md-viewport) {
  .grid-md--row { flex-direction: row }
  .grid-md--col { flex-direction: column }

  .grid-md--row-reverse { flex-direction: row-reverse    }
  .grid-md--col-reverse { flex-direction: column-reverse }

  .grid-md--1  > .grid-cell { flex: 0 0 calc(1 /  1 * 100)% }
  .grid-md--2  > .grid-cell { flex: 0 0 calc(1 /  2 * 100)% }
  .grid-md--3  > .grid-cell { flex: 0 0 calc(1 /  3 * 100)% }
  .grid-md--4  > .grid-cell { flex: 0 0 calc(1 /  4 * 100)% }
  .grid-md--5  > .grid-cell { flex: 0 0 calc(1 /  5 * 100)% }
  .grid-md--6  > .grid-cell { flex: 0 0 calc(1 /  6 * 100)% }
  .grid-md--7  > .grid-cell { flex: 0 0 calc(1 /  7 * 100)% }
  .grid-md--8  > .grid-cell { flex: 0 0 calc(1 /  8 * 100)% }
  .grid-md--9  > .grid-cell { flex: 0 0 calc(1 /  9 * 100)% }
  .grid-md--10 > .grid-cell { flex: 0 0 calc(1 / 10 * 100)% }
  .grid-md--11 > .grid-cell { flex: 0 0 calc(1 / 11 * 100)% }
  .grid-md--12 > .grid-cell { flex: 0 0 calc(1 / 12 * 100)% }
}

@media (--lg-viewport) {
  .grid-lg--row { flex-direction: row }
  .grid-lg--col { flex-direction: column }

  .grid-lg--row-reverse { flex-direction: row-reverse    }
  .grid-lg--col-reverse { flex-direction: column-reverse }

  .grid-lg--1  > .grid-cell { flex: 0 0 calc(1 /  1 * 100)% }
  .grid-lg--2  > .grid-cell { flex: 0 0 calc(1 /  2 * 100)% }
  .grid-lg--3  > .grid-cell { flex: 0 0 calc(1 /  3 * 100)% }
  .grid-lg--4  > .grid-cell { flex: 0 0 calc(1 /  4 * 100)% }
  .grid-lg--5  > .grid-cell { flex: 0 0 calc(1 /  5 * 100)% }
  .grid-lg--6  > .grid-cell { flex: 0 0 calc(1 /  6 * 100)% }
  .grid-lg--7  > .grid-cell { flex: 0 0 calc(1 /  7 * 100)% }
  .grid-lg--8  > .grid-cell { flex: 0 0 calc(1 /  8 * 100)% }
  .grid-lg--9  > .grid-cell { flex: 0 0 calc(1 /  9 * 100)% }
  .grid-lg--10 > .grid-cell { flex: 0 0 calc(1 / 10 * 100)% }
  .grid-lg--11 > .grid-cell { flex: 0 0 calc(1 / 11 * 100)% }
  .grid-lg--12 > .grid-cell { flex: 0 0 calc(1 / 12 * 100)% }
}

.grid > .grid-cell--1  { flex: 0 0 calc(1 /  1 * 100)% }
.grid > .grid-cell--2  { flex: 0 0 calc(1 /  2 * 100)% }
.grid > .grid-cell--3  { flex: 0 0 calc(1 /  3 * 100)% }
.grid > .grid-cell--4  { flex: 0 0 calc(1 /  4 * 100)% }
.grid > .grid-cell--5  { flex: 0 0 calc(1 /  5 * 100)% }
.grid > .grid-cell--6  { flex: 0 0 calc(1 /  6 * 100)% }
.grid > .grid-cell--7  { flex: 0 0 calc(1 /  7 * 100)% }
.grid > .grid-cell--8  { flex: 0 0 calc(1 /  8 * 100)% }
.grid > .grid-cell--9  { flex: 0 0 calc(1 /  9 * 100)% }
.grid > .grid-cell--10 { flex: 0 0 calc(1 / 10 * 100)% }
.grid > .grid-cell--11 { flex: 0 0 calc(1 / 11 * 100)% }
.grid > .grid-cell--12 { flex: 0 0 calc(1 / 12 * 100)% }

@media (--xs-viewport) {
  .grid > .grid-cell-xs--1  { flex: 0 0 calc(1 /  1 * 100)% }
  .grid > .grid-cell-xs--2  { flex: 0 0 calc(1 /  2 * 100)% }
  .grid > .grid-cell-xs--3  { flex: 0 0 calc(1 /  3 * 100)% }
  .grid > .grid-cell-xs--4  { flex: 0 0 calc(1 /  4 * 100)% }
  .grid > .grid-cell-xs--5  { flex: 0 0 calc(1 /  5 * 100)% }
  .grid > .grid-cell-xs--6  { flex: 0 0 calc(1 /  6 * 100)% }
  .grid > .grid-cell-xs--7  { flex: 0 0 calc(1 /  7 * 100)% }
  .grid > .grid-cell-xs--8  { flex: 0 0 calc(1 /  8 * 100)% }
  .grid > .grid-cell-xs--9  { flex: 0 0 calc(1 /  9 * 100)% }
  .grid > .grid-cell-xs--10 { flex: 0 0 calc(1 / 10 * 100)% }
  .grid > .grid-cell-xs--11 { flex: 0 0 calc(1 / 11 * 100)% }
  .grid > .grid-cell-xs--12 { flex: 0 0 calc(1 / 12 * 100)% }
}

@media (--sm-viewport) {
  .grid > .grid-cell-sm--1  { flex: 0 0 calc(1 /  1 * 100)% }
  .grid > .grid-cell-sm--2  { flex: 0 0 calc(1 /  2 * 100)% }
  .grid > .grid-cell-sm--3  { flex: 0 0 calc(1 /  3 * 100)% }
  .grid > .grid-cell-sm--4  { flex: 0 0 calc(1 /  4 * 100)% }
  .grid > .grid-cell-sm--5  { flex: 0 0 calc(1 /  5 * 100)% }
  .grid > .grid-cell-sm--6  { flex: 0 0 calc(1 /  6 * 100)% }
  .grid > .grid-cell-sm--7  { flex: 0 0 calc(1 /  7 * 100)% }
  .grid > .grid-cell-sm--8  { flex: 0 0 calc(1 /  8 * 100)% }
  .grid > .grid-cell-sm--9  { flex: 0 0 calc(1 /  9 * 100)% }
  .grid > .grid-cell-sm--10 { flex: 0 0 calc(1 / 10 * 100)% }
  .grid > .grid-cell-sm--11 { flex: 0 0 calc(1 / 11 * 100)% }
  .grid > .grid-cell-sm--12 { flex: 0 0 calc(1 / 12 * 100)% }
}

@media (--md-viewport) {
  .grid > .grid-cell-md--1  { flex: 0 0 calc(1 /  1 * 100)% }
  .grid > .grid-cell-md--2  { flex: 0 0 calc(1 /  2 * 100)% }
  .grid > .grid-cell-md--3  { flex: 0 0 calc(1 /  3 * 100)% }
  .grid > .grid-cell-md--4  { flex: 0 0 calc(1 /  4 * 100)% }
  .grid > .grid-cell-md--5  { flex: 0 0 calc(1 /  5 * 100)% }
  .grid > .grid-cell-md--6  { flex: 0 0 calc(1 /  6 * 100)% }
  .grid > .grid-cell-md--7  { flex: 0 0 calc(1 /  7 * 100)% }
  .grid > .grid-cell-md--8  { flex: 0 0 calc(1 /  8 * 100)% }
  .grid > .grid-cell-md--9  { flex: 0 0 calc(1 /  9 * 100)% }
  .grid > .grid-cell-md--10 { flex: 0 0 calc(1 / 10 * 100)% }
  .grid > .grid-cell-md--11 { flex: 0 0 calc(1 / 11 * 100)% }
  .grid > .grid-cell-md--12 { flex: 0 0 calc(1 / 12 * 100)% }
}

@media (--lg-viewport) {
  .grid > .grid-cell-lg--1  { flex: 0 0 calc(1 /  1 * 100)% }
  .grid > .grid-cell-lg--2  { flex: 0 0 calc(1 /  2 * 100)% }
  .grid > .grid-cell-lg--3  { flex: 0 0 calc(1 /  3 * 100)% }
  .grid > .grid-cell-lg--4  { flex: 0 0 calc(1 /  4 * 100)% }
  .grid > .grid-cell-lg--5  { flex: 0 0 calc(1 /  5 * 100)% }
  .grid > .grid-cell-lg--6  { flex: 0 0 calc(1 /  6 * 100)% }
  .grid > .grid-cell-lg--7  { flex: 0 0 calc(1 /  7 * 100)% }
  .grid > .grid-cell-lg--8  { flex: 0 0 calc(1 /  8 * 100)% }
  .grid > .grid-cell-lg--9  { flex: 0 0 calc(1 /  9 * 100)% }
  .grid > .grid-cell-lg--10 { flex: 0 0 calc(1 / 10 * 100)% }
  .grid > .grid-cell-lg--11 { flex: 0 0 calc(1 / 11 * 100)% }
  .grid > .grid-cell-lg--12 { flex: 0 0 calc(1 / 12 * 100)% }
}
